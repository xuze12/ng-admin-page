{"version":3,"sources":["webpack:///src/app/pages/system/menu/components/menu-form-modal/menu-form-modal-routing.module.ts","webpack:///src/app/pages/system/menu/components/menu-form-modal/menu-form-modal.component.ts","webpack:///src/app/pages/system/menu/components/menu-form-modal/menu-form-modal.component.html","webpack:///src/app/pages/system/menu/components/menu-form-modal/menu-form-modal.module.ts","webpack:///src/app/pages/system/menu/components/page-select-modal/page-select-modal-routing.module.ts","webpack:///src/app/pages/system/menu/components/page-select-modal/page-select-modal.component.ts","webpack:///src/app/pages/system/menu/components/page-select-modal/page-select-modal.component.html","webpack:///src/app/pages/system/menu/components/page-select-modal/page-select-modal.module.ts","webpack:///src/app/pages/system/menu/menu-routing.module.ts","webpack:///src/app/pages/system/menu/menu.component.ts","webpack:///src/app/pages/system/menu/menu.component.html","webpack:///src/app/pages/system/menu/menu.module.ts"],"names":["routes","path","component","MenuFormModalRoutingModule","forChild","imports","exports","MenuFormModalComponent","fb","menuNameAsyncValidator","control","observer","setTimeout","value","next","duplicated","en","complete","required","MyValidators","maxLength","minLength","validateForm","group","menuName","key","controls","markAsDirty","updateValueAndValidity","console","log","handleOk","handleCancel","submitForm","selector","templateUrl","styleUrls","minlength","maxlength","MenuFormModalModule","declarations","PageSelectModalRoutingModule","PageSelectModalComponent","radioValue","PageSelectModalModule","MenuRoutingModule","MenuComponent","modal","listOfMapData","page","name","url","address","children","addNavMenuModalOpen","editNavMenuModalOpen","pageSelectModalOpen","mapOfExpandedData","handleAddModalShow","handleAddOk","handleAddCancel","handleEditModalShow","handleEditOk","handleEditCancel","handlePageSelectModalShow","handlePageSelectOk","handlePageSelectCancel","forEach","item","convertTreeToList","array","data","$event","d","target","find","a","expand","collapse","root","stack","hashMap","push","level","length","node","pop","visitNode","i","parent","confirm","nzTitle","nzContent","nzOkText","nzOkType","nzOnOk","nzCancelText","nzOnCancel","MenuModule"],"mappings":"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","file":"pages-system-menu-menu-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MenuFormModalComponent } from './menu-form-modal.component';\n\nconst routes: Routes = [\n  { path: '', component: MenuFormModalComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MenuFormModalRoutingModule { }\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { Observable, Observer } from 'rxjs';\n\n\n\n@Component({\n  selector: 'app-menu-form-modal',\n  templateUrl: './menu-form-modal.component.html',\n  styleUrls: ['./menu-form-modal.component.scss']\n})\n\nexport class MenuFormModalComponent implements OnInit {\n\n  @Input() isVisible: boolean\n  @Input() title: string\n  @Input() handleOk: any\n  @Input() handleCancel: any\n\n  validateForm: FormGroup;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    // use `MyValidators`\n    const { required, maxLength, minLength, } = MyValidators;\n    this.validateForm = this.fb.group({\n      menuName: ['', [required, maxLength(12), minLength(6)], [this.menuNameAsyncValidator]],\n    });\n\n  }\n\n  submitForm(value: { menuName: string; }): void {\n    for (const key in this.validateForm.controls) {\n      this.validateForm.controls[key].markAsDirty();\n      this.validateForm.controls[key].updateValueAndValidity();\n    }\n    console.log(value);\n    this.handleOk(value)\n  }\n\n  menuNameAsyncValidator = (control: FormControl) =>\n    new Observable((observer: Observer<MyValidationErrors | null>) => {\n      setTimeout(() => {\n        if (control.value === 'JasonWood') {\n          observer.next({\n            duplicated: { 'zh-cn': `用户名已存在`, en: `The menuname is redundant!` }\n          });\n        } else {\n          observer.next(null);\n        }\n        observer.complete();\n      }, 1000);\n    });\n\n\n}\n\n// current locale is key of the MyErrorsOptions\nexport type MyErrorsOptions = { 'zh-cn': string; en: string } & Record<string, NzSafeAny>;\nexport type MyValidationErrors = Record<string, MyErrorsOptions>;\n\nexport class MyValidators extends Validators {\n  static minLength(minLength: number): ValidatorFn {\n    return (control: AbstractControl): MyValidationErrors | null => {\n      if (Validators.minLength(minLength)(control) === null) {\n        return null;\n      }\n      return { minlength: { 'zh-cn': `最小长度为 ${minLength}`, en: `MinLength is ${minLength}` } };\n    };\n  }\n\n  static maxLength(maxLength: number): ValidatorFn {\n    return (control: AbstractControl): MyValidationErrors | null => {\n      if (Validators.maxLength(maxLength)(control) === null) {\n        return null;\n      }\n      return { maxlength: { 'zh-cn': `最大长度为 ${maxLength}`, en: `MaxLength is ${maxLength}` } };\n    };\n  }\n\n}\n\n// function isEmptyInputValue(value: NzSafeAny): boolean {\n//   return value == null || value.length === 0;\n// }\n\n","<nz-modal [(nzVisible)]=\"isVisible\" [nzTitle]=\"title\" (nzOnCancel)=\"handleCancel()\" (nzOnOk)=\"submitForm(validateForm.value)\">\n  <form nz-form [formGroup]=\"validateForm\">\n    <nz-form-item>\n      <nz-form-label [nzSpan]=\"24\" nzRequired>导航菜单名称</nz-form-label>\n      <nz-form-control [nzSpan]=\"18\" nzValidatingTip=\"Validating...\">\n        <input nz-input formControlName=\"menuName\" placeholder=\"请输入导航菜单名称\" />\n      </nz-form-control>\n    </nz-form-item>\n  </form>\n</nz-modal>\n","import { NgModule } from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\nimport { MenuFormModalRoutingModule } from './menu-form-modal-routing.module';\nimport { MenuFormModalComponent } from './menu-form-modal.component';\n\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MenuFormModalRoutingModule,\n    NzModalModule,\n    NzFormModule,\n    NzButtonModule,\n    NzInputModule,\n    NzGridModule\n  ],\n  declarations: [MenuFormModalComponent],\n  exports: [MenuFormModalComponent]\n})\nexport class MenuFormModalModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageSelectModalComponent } from './page-select-modal.component';\n\nconst routes: Routes = [\n  { path: '', component: PageSelectModalComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PageSelectModalRoutingModule { }\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { Observable, Observer } from 'rxjs';\n\n@Component({\n  selector: 'app-page-select-modal',\n  templateUrl: './page-select-modal.component.html',\n  styleUrls: ['./page-select-modal.component.scss']\n})\nexport class PageSelectModalComponent implements OnInit {\n\n\n  @Input() isVisible: boolean\n  @Input() title: string\n  @Input() handleOk: any\n  @Input() handleCancel: any\n\n  validateForm: FormGroup;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    // use `MyValidators`\n    const { required, maxLength, minLength, } = MyValidators;\n    this.validateForm = this.fb.group({\n      menuName: ['', [required, maxLength(12), minLength(6)], [this.menuNameAsyncValidator]],\n      radioValue:['人员管理页', [required]],\n    });\n\n  }\n\n  submitForm(value: { menuName: string; }): void {\n    for (const key in this.validateForm.controls) {\n      this.validateForm.controls[key].markAsDirty();\n      this.validateForm.controls[key].updateValueAndValidity();\n    }\n    console.log(value);\n    this.handleOk(value)\n  }\n\n  menuNameAsyncValidator = (control: FormControl) =>\n    new Observable((observer: Observer<MyValidationErrors | null>) => {\n      setTimeout(() => {\n        if (control.value === 'JasonWood') {\n          observer.next({\n            duplicated: { 'zh-cn': `用户名已存在`, en: `The menuname is redundant!` }\n          });\n        } else {\n          observer.next(null);\n        }\n        observer.complete();\n      }, 1000);\n    });\n\n}\n\n\n\n// current locale is key of the MyErrorsOptions\nexport type MyErrorsOptions = { 'zh-cn': string; en: string } & Record<string, NzSafeAny>;\nexport type MyValidationErrors = Record<string, MyErrorsOptions>;\n\nexport class MyValidators extends Validators {\n  static minLength(minLength: number): ValidatorFn {\n    return (control: AbstractControl): MyValidationErrors | null => {\n      if (Validators.minLength(minLength)(control) === null) {\n        return null;\n      }\n      return { minlength: { 'zh-cn': `最小长度为 ${minLength}`, en: `MinLength is ${minLength}` } };\n    };\n  }\n\n  static maxLength(maxLength: number): ValidatorFn {\n    return (control: AbstractControl): MyValidationErrors | null => {\n      if (Validators.maxLength(maxLength)(control) === null) {\n        return null;\n      }\n      return { maxlength: { 'zh-cn': `最大长度为 ${maxLength}`, en: `MaxLength is ${maxLength}` } };\n    };\n  }\n\n}\n\n// function isEmptyInputValue(value: NzSafeAny): boolean {\n//   return value == null || value.length === 0;\n// }\n","<nz-modal [(nzVisible)]=\"isVisible\" [nzTitle]=\"title\" (nzOnCancel)=\"handleCancel()\"\n  (nzOnOk)=\"submitForm(validateForm.value)\">\n  <form nz-form [formGroup]=\"validateForm\">\n    <nz-form-item>\n      <nz-form-control [nzSpan]=\"20\" nzValidatingTip=\"Validating...\">\n        <input nz-input formControlName=\"menuName\" placeholder=\"搜索页面\" />\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-control [nzSpan]=\"20\">\n        <nz-radio-group formControlName=\"radioValue\" class='page-radio-group'>\n          <label class='page-radio-item' nz-radio nzValue=\"人员管理页\">人员管理页</label>\n          <label class='page-radio-item' nz-radio nzValue=\"机构管理页\">机构管理页</label>\n          <label class='page-radio-item' nz-radio nzValue=\"操作日志页\">操作日志页</label>\n          <label class='page-radio-item' nz-radio nzValue=\"单位信息页\">单位信息页</label>\n          <label class='page-radio-item' nz-radio nzValue=\"给养标准页\">给养标准页</label>\n          <label class='page-radio-item' nz-radio nzValue=\"单位信息页\">单位信息页</label>\n          <label class='page-radio-item' nz-radio nzValue=\"给养标准页\">给养标准页</label>\n          <label class='page-radio-item' nz-radio nzValue=\"单位信息页\">单位信息页</label>\n          <label class='page-radio-item' nz-radio nzValue=\"给养标准页\">给养标准页</label>\n          <label class='page-radio-item' nz-radio nzValue=\"单位信息页\">单位信息页</label>\n          <label class='page-radio-item' nz-radio nzValue=\"给养标准页\">给养标准页</label>\n        </nz-radio-group>\n      </nz-form-control>\n    </nz-form-item>\n  </form>\n</nz-modal>\n","import { NgModule } from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\nimport { PageSelectModalRoutingModule } from './page-select-modal-routing.module';\nimport { PageSelectModalComponent } from './page-select-modal.component';\n\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    PageSelectModalRoutingModule,\n    NzModalModule,\n    NzFormModule,\n    NzButtonModule,\n    NzInputModule,\n    NzGridModule,\n    NzRadioModule\n  ],\n  declarations: [PageSelectModalComponent],\n  exports: [PageSelectModalComponent]\n})\nexport class PageSelectModalModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MenuComponent } from './menu.component';\n\nconst routes: Routes = [\n  { path: '', component: MenuComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MenuRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NzModalService } from 'ng-zorro-antd/modal';\n\nexport interface TreeNodeInterface {\n  key: number;\n  menuName: string;\n  page?: any;\n  level?: number;\n  expand?: boolean;\n  address?: string;\n  children?: TreeNodeInterface[];\n  parent?: TreeNodeInterface;\n}\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  listOfMapData: TreeNodeInterface[] = [\n    {\n      key: 1,\n      menuName: '账号管理',\n      page: { name: '', url: '' },\n      address: 'New York No. 1 Lake Park',\n      children: [\n        {\n          key: 11,\n          menuName: '人员管理',\n          page: { name: '人员管理页', url: '' },\n          address: 'New York No. 2 Lake Park'\n        },\n        {\n          key: 12,\n          menuName: '组织机构管理',\n          page: { name: '组织机构管理页', url: '' },\n          address: 'New York No. 3 Lake Park',\n          children: [\n            {\n              key: 121,\n              menuName: '系统管理员',\n              page: { name: '系统管理员页', url: '' },\n              address: 'New York No. 3 Lake Park'\n            }\n          ]\n        },\n\n      ]\n    },\n  ];\n\n  // 是否显示 添加菜单弹框\n  addNavMenuModalOpen = false;\n  // 是否显示 编辑菜单弹框\n  editNavMenuModalOpen = false;\n  //是否显示 选择页面弹框\n  pageSelectModalOpen = false;\n\n  mapOfExpandedData: { [key: string]: TreeNodeInterface[] } = {};\n\n  constructor(private modal: NzModalService) { }\n\n  ngOnInit(): void {\n    this.listOfMapData.forEach(item => {\n      this.mapOfExpandedData[item.key] = this.convertTreeToList(item);\n    });\n  }\n\n  // 列表展开关闭\n  collapse(array: TreeNodeInterface[], data: TreeNodeInterface, $event: boolean): void {\n    if (!$event) {\n      if (data.children) {\n        data.children.forEach(d => {\n          const target = array.find(a => a.key === d.key)!;\n          target.expand = false;\n          this.collapse(array, target, false);\n        });\n      } else {\n        return;\n      }\n    }\n  }\n\n  convertTreeToList(root: TreeNodeInterface): TreeNodeInterface[] {\n    const stack: TreeNodeInterface[] = [];\n    const array: TreeNodeInterface[] = [];\n    const hashMap = {};\n    stack.push({ ...root, level: 0, expand: false });\n\n    while (stack.length !== 0) {\n      const node = stack.pop()!;\n      this.visitNode(node, hashMap, array);\n      if (node.children) {\n        for (let i = node.children.length - 1; i >= 0; i--) {\n          stack.push({ ...node.children[i], level: node.level! + 1, expand: false, parent: node });\n        }\n      }\n    }\n\n    return array;\n  }\n\n  visitNode(node: TreeNodeInterface, hashMap: { [key: string]: boolean }, array: TreeNodeInterface[]): void {\n    if (!hashMap[node.key]) {\n      hashMap[node.key] = true;\n      array.push(node);\n    }\n  }\n\n  // 显示添加导航菜单弹框\n  handleAddModalShow = (): void => {\n    this.addNavMenuModalOpen = true;\n  }\n  // 添加导航菜单模态框 确认\n  handleAddOk = (value: any): void => {\n    console.log('-----value', value);\n    this.addNavMenuModalOpen = false;\n  }\n\n  // 添加导航菜单模态框 关闭\n  handleAddCancel = (): void => {\n    this.addNavMenuModalOpen = false;\n  }\n\n  // 显示 编辑导航菜单弹框\n  handleEditModalShow = (): void => {\n    this.editNavMenuModalOpen = true;\n  }\n  // 编辑导航菜单模态框 确认\n  handleEditOk = (value: any): void => {\n    console.log('-----value', value);\n    this.editNavMenuModalOpen = false;\n  }\n\n  // 编辑导航菜单模态框 关闭\n  handleEditCancel = (): void => {\n    this.editNavMenuModalOpen = false;\n  }\n\n    // 显示 选择页面弹框\n    handlePageSelectModalShow = (): void => {\n      this.pageSelectModalOpen = true;\n    }\n    // 选择页面弹框 确认\n    handlePageSelectOk = (value: any): void => {\n      console.log('-----value', value);\n      this.pageSelectModalOpen = false;\n    }\n  \n    // 选择页面弹框 关闭\n    handlePageSelectCancel = (): void => {\n      this.pageSelectModalOpen = false;\n    }\n\n  // 删除菜单\n  showMenuDeleteConfirm(): void {\n    this.modal.confirm({\n      nzTitle: '提示',\n      nzContent: '<b style=\"color: red;\">你正在删除导航菜单,对应的子菜单也会被删除,确定要删除？</b>',\n      nzOkText: '删除',\n      nzOkType: 'danger',\n      nzOnOk: () => console.log('OK'),\n      nzCancelText: '取消',\n      nzOnCancel: () => console.log('Cancel')\n    });\n  }\n\n}\n","<!--页头部-->\n<app-page-header></app-page-header>\n\n<!--列表-->\n<nz-table #expandTable [nzData]=\"listOfMapData\" nzTableLayout=\"fixed\">\n  <thead>\n    <tr>\n      <th>导航菜单名称</th>\n      <th>跳转页面</th>\n      <th>操作</th>\n    </tr>\n  </thead>\n  <tbody>\n    <ng-container *ngFor=\"let data of expandTable.data\">\n      <ng-container *ngFor=\"let item of mapOfExpandedData[data.key]\">\n        <tr *ngIf=\"(item.parent && item.parent.expand) || !item.parent\">\n          <td [nzIndentSize]=\"item.level! * 20\" [nzShowExpand]=\"!!item.children\" [(nzExpand)]=\"item.expand\"\n            (nzExpandChange)=\"collapse(mapOfExpandedData[data.key], item, $event)\">\n            {{ item.menuName }}\n          </td>\n          <td>\n            <a *ngIf=\"item.page.name\"> {{ item.page.name }}</a>\n            <a *ngIf=\"!item.page.name\" (click)=\"handlePageSelectModalShow()\"> 选择页面</a>\n          </td>\n          <td>\n            <a (click)=\"handleAddModalShow()\">添加子导航</a>\n            <nz-divider nzType=\"vertical\"></nz-divider>\n            <a (click)=\"handleEditModalShow()\">编辑</a>\n            <nz-divider nzType=\"vertical\"></nz-divider>\n            <a (click)=\"showMenuDeleteConfirm()\">删除</a>\n          </td>\n        </tr>\n      </ng-container>\n    </ng-container>\n  </tbody>\n</nz-table>\n\n<!--添加导航弹框-->\n<app-menu-form-modal title='添加子导航' [isVisible]=\"addNavMenuModalOpen\" [handleOk]=\"handleAddOk\"\n  [handleCancel]=\"handleAddCancel\"></app-menu-form-modal>\n\n<!--编辑导航弹框-->\n<app-menu-form-modal title='编辑子导航' [isVisible]=\"editNavMenuModalOpen\" [handleOk]=\"handleEditOk\"\n  [handleCancel]=\"handleEditCancel\"></app-menu-form-modal>\n\n<!--页面选择弹框-->\n<app-page-select-modal title='选择页面（人员管理）' [isVisible]=\"pageSelectModalOpen\" [handleOk]=\"handlePageSelectOk\"\n  [handleCancel]=\"handlePageSelectCancel\"></app-page-select-modal>\n","import { NgModule } from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport { MenuRoutingModule } from './menu-routing.module';\n\nimport { MenuComponent } from './menu.component';\n\nimport {PageHeaderModule} from '../../../components/page-header/page-header.module'\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzTableModule } from 'ng-zorro-antd/table';\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport {MenuFormModalModule} from './components/menu-form-modal/menu-form-modal.module'\nimport {PageSelectModalModule} from './components/page-select-modal/page-select-modal.module'\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MenuRoutingModule,\n    PageHeaderModule,\n    NzButtonModule,\n    NzTableModule,\n    NzDividerModule,\n    NzModalModule,\n    MenuFormModalModule,\n    PageSelectModalModule\n  ],\n  declarations: [MenuComponent],\n  exports: [MenuComponent]\n})\nexport class MenuModule { }\n"]}