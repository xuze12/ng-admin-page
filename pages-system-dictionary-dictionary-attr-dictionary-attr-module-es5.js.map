{"version":3,"sources":["webpack:///src/app/pages/system/dictionary/components/attr-form-modal/attr-form-modal-routing.module.ts","webpack:///src/app/pages/system/dictionary/components/attr-form-modal/attr-form-modal.component.ts","webpack:///src/app/pages/system/dictionary/components/attr-form-modal/attr-form-modal.component.html","webpack:///src/app/pages/system/dictionary/components/attr-form-modal/attr-form-modal.module.ts","webpack:///src/app/pages/system/dictionary/dictionary-attr/dictionary-attr-routing.module.ts","webpack:///src/app/pages/system/dictionary/dictionary-attr/dictionary-attr.component.ts","webpack:///src/app/pages/system/dictionary/dictionary-attr/dictionary-attr.component.html","webpack:///src/app/pages/system/dictionary/dictionary-attr/dictionary-attr.module.ts"],"names":["routes","path","component","AttrFormModalRoutingModule","forChild","imports","exports","AttrFormModalComponent","fb","menuNameAsyncValidator","control","observer","setTimeout","value","next","duplicated","en","complete","required","MyValidators","maxLength","minLength","validateForm","group","menuName","des","key","controls","markAsDirty","updateValueAndValidity","console","log","handleOk","handleCancel","submitForm","selector","templateUrl","styleUrls","minlength","maxlength","AttrFormModalModule","declarations","DictionaryAttrRoutingModule","DictionaryAttrComponent","modal","listOfMapData","name","children","mapOfExpandedData","addAttrModalOpen","editAttrModalOpen","handleAddAttrModalShow","handleAddAttrOk","handleAddAttrCancel","handleEditAttrModalShow","handleEditAttrOk","handleEditAttrCancel","forEach","item","convertTreeToList","array","data","$event","d","target","find","a","expand","collapse","root","stack","hashMap","push","level","length","node","pop","visitNode","i","parent","confirm","nzTitle","nzContent","nzOkText","nzOkType","nzOnOk","nzCancelText","nzOnCancel","DictionaryAttrModule"],"mappings":"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","file":"pages-system-dictionary-dictionary-attr-dictionary-attr-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AttrFormModalComponent } from './attr-form-modal.component';\n\nconst routes: Routes = [\n  { path: '', component: AttrFormModalComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AttrFormModalRoutingModule { }\n","import { Component, OnInit,Input } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { Observable, Observer } from 'rxjs';\n\n\n@Component({\n  selector: 'app-attr-form-modal',\n  templateUrl: './attr-form-modal.component.html',\n  styleUrls: ['./attr-form-modal.component.scss']\n})\nexport class AttrFormModalComponent implements OnInit {\n\n  @Input() isVisible: boolean\n  @Input() title: string\n  @Input() handleOk: any\n  @Input() handleCancel: any\n\n  validateForm: FormGroup;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    // use `MyValidators`\n    const { required, maxLength, minLength, } = MyValidators;\n    this.validateForm = this.fb.group({\n      menuName: ['', [required, maxLength(12), minLength(6)], [this.menuNameAsyncValidator]],\n      des:['', [required]],\n    });\n\n  }\n\n  submitForm(value: { menuName: string; }): void {\n    for (const key in this.validateForm.controls) {\n      this.validateForm.controls[key].markAsDirty();\n      this.validateForm.controls[key].updateValueAndValidity();\n    }\n    console.log(value);\n    this.handleOk(value)\n  }\n\n  menuNameAsyncValidator = (control: FormControl) =>\n    new Observable((observer: Observer<MyValidationErrors | null>) => {\n      setTimeout(() => {\n        if (control.value === 'JasonWood') {\n          observer.next({\n            duplicated: { 'zh-cn': `用户名已存在`, en: `The menuname is redundant!` }\n          });\n        } else {\n          observer.next(null);\n        }\n        observer.complete();\n      }, 1000);\n    });\n\n\n}\n\n// current locale is key of the MyErrorsOptions\nexport type MyErrorsOptions = { 'zh-cn': string; en: string } & Record<string, NzSafeAny>;\nexport type MyValidationErrors = Record<string, MyErrorsOptions>;\n\nexport class MyValidators extends Validators {\n  static minLength(minLength: number): ValidatorFn {\n    return (control: AbstractControl): MyValidationErrors | null => {\n      if (Validators.minLength(minLength)(control) === null) {\n        return null;\n      }\n      return { minlength: { 'zh-cn': `最小长度为 ${minLength}`, en: `MinLength is ${minLength}` } };\n    };\n  }\n\n  static maxLength(maxLength: number): ValidatorFn {\n    return (control: AbstractControl): MyValidationErrors | null => {\n      if (Validators.maxLength(maxLength)(control) === null) {\n        return null;\n      }\n      return { maxlength: { 'zh-cn': `最大长度为 ${maxLength}`, en: `MaxLength is ${maxLength}` } };\n    };\n  }\n\n}\n","<nz-modal [(nzVisible)]=\"isVisible\" [nzTitle]=\"title\" (nzOnCancel)=\"handleCancel()\" (nzOnOk)=\"submitForm(validateForm.value)\">\n  <form nz-form [formGroup]=\"validateForm\">\n    <nz-form-item>\n      <nz-form-label [nzSpan]=\"24\" nzRequired>字段名称</nz-form-label>\n      <nz-form-control [nzSpan]=\"18\" nzValidatingTip=\"Validating...\">\n        <input nz-input formControlName=\"menuName\" placeholder=\"请输入字段名称\" />\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label [nzSpan]=\"24\" nzRequired>描述</nz-form-label>\n      <nz-form-control [nzSpan]=\"18\" nzErrorTip=\"Please write something here!\">\n        <textarea formControlName=\"des\" nz-input rows=\"4\" placeholder=\"请输入描述文字\"></textarea>\n      </nz-form-control>\n    </nz-form-item>\n  </form>\n</nz-modal>\n","import { NgModule } from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\nimport { AttrFormModalRoutingModule } from './attr-form-modal-routing.module';\nimport { AttrFormModalComponent } from './attr-form-modal.component';\n\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AttrFormModalRoutingModule,\n    NzModalModule,\n    NzFormModule,\n    NzButtonModule,\n    NzInputModule,\n    NzGridModule\n  ],\n  declarations: [AttrFormModalComponent],\n  exports: [AttrFormModalComponent]\n})\nexport class AttrFormModalModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DictionaryAttrComponent } from './dictionary-attr.component';\n\nconst routes: Routes = [\n  { path: '', component: DictionaryAttrComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DictionaryAttrRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NzModalService } from 'ng-zorro-antd/modal';\n\nexport interface TreeNodeInterface {\n  key: number;\n  name: string;\n  des?: string;\n  level?: number;\n  expand?: boolean;\n  children?: TreeNodeInterface[];\n  parent?: TreeNodeInterface;\n}\n\n@Component({\n  selector: 'app-dictionary-attr',\n  templateUrl: './dictionary-attr.component.html',\n  styleUrls: ['./dictionary-attr.component.scss']\n})\nexport class DictionaryAttrComponent implements OnInit {\n  listOfMapData: TreeNodeInterface[] = [\n    {\n      key: 1,\n      name: '军',\n      des: '组织机构属性，可在组织管理出进行配置',\n      children: [\n\n        {\n          key: 12,\n          name: '师',\n          des: '组织机构属性，可在组织管理出进行配置',\n          children: [\n            {\n              key: 121,\n              name: '团',\n              des: '组织机构属性，可在组织管理出进行配置',\n            }\n          ]\n        },\n\n      ]\n    },\n\n  ];\n  mapOfExpandedData: { [key: string]: TreeNodeInterface[] } = {};\n  addAttrModalOpen = false\n  editAttrModalOpen = false\n\n  constructor(private modal: NzModalService) { }\n\n  ngOnInit(): void {\n    this.listOfMapData.forEach(item => {\n      this.mapOfExpandedData[item.key] = this.convertTreeToList(item);\n    });\n\n  }\n\n  collapse(array: TreeNodeInterface[], data: TreeNodeInterface, $event: boolean): void {\n    if (!$event) {\n      if (data.children) {\n        data.children.forEach(d => {\n          const target = array.find(a => a.key === d.key)!;\n          target.expand = false;\n          this.collapse(array, target, false);\n        });\n      } else {\n        return;\n      }\n    }\n  }\n\n  convertTreeToList(root: TreeNodeInterface): TreeNodeInterface[] {\n    const stack: TreeNodeInterface[] = [];\n    const array: TreeNodeInterface[] = [];\n    const hashMap = {};\n    stack.push({ ...root, level: 0, expand: false });\n\n    while (stack.length !== 0) {\n      const node = stack.pop()!;\n      this.visitNode(node, hashMap, array);\n      if (node.children) {\n        for (let i = node.children.length - 1; i >= 0; i--) {\n          stack.push({ ...node.children[i], level: node.level! + 1, expand: false, parent: node });\n        }\n      }\n    }\n\n    return array;\n  }\n\n  visitNode(node: TreeNodeInterface, hashMap: { [key: string]: boolean }, array: TreeNodeInterface[]): void {\n    if (!hashMap[node.key]) {\n      hashMap[node.key] = true;\n      array.push(node);\n    }\n  }\n\n  // 显示 添加属性弹框\n  handleAddAttrModalShow = (): void => {\n    this.addAttrModalOpen = true;\n  }\n  // 添加属性弹框 确认\n  handleAddAttrOk = (value: any): void => {\n    console.log('-----value', value);\n    this.addAttrModalOpen = false;\n  }\n\n  // 添加属性弹框 关闭\n  handleAddAttrCancel = (): void => {\n    this.addAttrModalOpen = false;\n  }\n\n  // 显示 编辑属性弹框\n  handleEditAttrModalShow = (): void => {\n    this.editAttrModalOpen = true;\n  }\n  // 编辑属性弹框 确认\n  handleEditAttrOk = (value: any): void => {\n    console.log('-----value', value);\n    this.editAttrModalOpen = false;\n  }\n\n  // 编辑属性弹框 关闭\n  handleEditAttrCancel = (): void => {\n    this.editAttrModalOpen = false;\n  }\n\n  // 删除属性\n  showMenuDeleteConfirm(): void {\n    this.modal.confirm({\n      nzTitle: '提示',\n      nzContent: '<b style=\"color: red;\">你正在删除字段,删除后无法恢复,确定要删除？</b>',\n      nzOkText: '删除',\n      nzOkType: 'danger',\n      nzOnOk: () => console.log('OK'),\n      nzCancelText: '取消',\n      nzOnCancel: () => console.log('Cancel')\n    });\n  }\n\n}\n","<!--页头部-->\n<app-page-header></app-page-header>\n\n<!--添加按钮-->\n<div class=\"add-button\">\n  <a> <button nz-button nzType=\"primary\" (click)=\"handleAddAttrModalShow()\">添加</button></a>\n</div>\n\n<!--列表-->\n\n<nz-table #expandTable [nzData]=\"listOfMapData\" nzTableLayout=\"fixed\">\n  <thead>\n    <tr>\n      <th>字段名称</th>\n      <th>描述</th>\n      <th>操作</th>\n    </tr>\n  </thead>\n  <tbody>\n    <ng-container *ngFor=\"let data of expandTable.data\">\n      <ng-container *ngFor=\"let item of mapOfExpandedData[data.key]\">\n        <tr *ngIf=\"(item.parent && item.parent.expand) || !item.parent\">\n          <td [nzIndentSize]=\"item.level! * 20\" [nzShowExpand]=\"!!item.children\" [(nzExpand)]=\"item.expand\"\n            (nzExpandChange)=\"collapse(mapOfExpandedData[data.key], item, $event)\">\n            {{ item.name }}\n          </td>\n          <td>{{ item.des }}</td>\n          <td nzAlign=\"center\">\n            <a (click)='handleEditAttrModalShow()'>编辑</a>\n            <nz-divider nzType=\"vertical\"></nz-divider>\n            <a (click)='showMenuDeleteConfirm()'>删除</a>\n          </td>\n        </tr>\n      </ng-container>\n    </ng-container>\n  </tbody>\n</nz-table>\n\n<!--添加弹框-->\n<app-attr-form-modal title='添加' [isVisible]=\"addAttrModalOpen\" [handleOk]=\"handleAddAttrOk\"\n[handleCancel]=\"handleAddAttrCancel\"></app-attr-form-modal>\n\n<!--编辑弹框-->\n<app-attr-form-modal title='编辑' [isVisible]=\"editAttrModalOpen\" [handleOk]=\"handleEditAttrOk\"\n[handleCancel]=\"handleEditAttrCancel\"></app-attr-form-modal>","import { NgModule } from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport { DictionaryAttrRoutingModule } from './dictionary-attr-routing.module';\n\nimport { DictionaryAttrComponent } from './dictionary-attr.component';\n\nimport {PageHeaderModule} from '../../../../components/page-header/page-header.module'\nimport {AttrFormModalModule} from '../components/attr-form-modal/attr-form-modal.module'\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzTableModule } from 'ng-zorro-antd/table';\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DictionaryAttrRoutingModule,\n    AttrFormModalModule,\n    PageHeaderModule,\n    NzButtonModule,\n    NzTableModule,\n    NzDividerModule,\n    NzModalModule\n  ],\n  declarations: [DictionaryAttrComponent],\n  exports: [DictionaryAttrComponent]\n})\nexport class DictionaryAttrModule { }\n"]}